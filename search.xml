<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>我的第一篇博客文章</title>
      <link href="/2021/062915651.html"/>
      <url>/2021/062915651.html</url>
      
        <content type="html"><![CDATA[<h2 id="第一章"><a href="#第一章" class="headerlink" title="第一章"></a>第一章</h2><p> DOM 对象 使用原生javascript 属性和方法<br> jQuery 对象只能使用 jquery 方法<br>date: 2021-06-29 16:54:44</p>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> jQuery </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>模糊查询</title>
      <link href="/2021/062915650.html"/>
      <url>/2021/062915650.html</url>
      
        <content type="html"><![CDATA[<h2 id="如果使用序列化的方法，先要创建序列化器"><a href="#如果使用序列化的方法，先要创建序列化器" class="headerlink" title="如果使用序列化的方法，先要创建序列化器"></a>如果使用序列化的方法，先要创建序列化器</h2><ul><li>第一步：配置子路由：<br>path(‘tiao/‘,views.tiao.as_view(),name=’tiao’)</li></ul><ul><li><p>第二步：HTML页面：<br><code>&lt;input type=&quot;text&quot; id=&quot;cha&quot;&gt; &lt;button onclick=&quot;tiaojian()&quot;&gt;查询&lt;/button&gt; </code>  </p></li><li><p>写一个按钮触发函数</p><figure class="highlight lua"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">tiaojian</span><span class="params">()</span></span> &#123;</span><br><span class="line">        var a = $(<span class="string">&#x27;#cha&#x27;</span>).val();</span><br><span class="line">        </span><br><span class="line">        $.ajax(&#123;</span><br><span class="line">            url: <span class="string">&quot;&#123;% url &#x27;tiao&#x27; %&#125;&quot;</span>,</span><br><span class="line">            <span class="built_in">type</span>: <span class="string">&#x27;GET&#x27;</span>,           #get请求或者post请求都可以</span><br><span class="line">            data: (&#123;</span><br><span class="line">                <span class="string">&#x27;cha&#x27;</span>: a           #把获取到的值定义为‘cha’ 传到后端 </span><br><span class="line">            &#125;),</span><br><span class="line">            success: <span class="function"><span class="keyword">function</span> <span class="params">(date)</span></span> &#123;</span><br><span class="line">                var html = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">                <span class="keyword">for</span> (var i = <span class="number">0</span>; i &lt; <span class="built_in">date</span>.length; i++) &#123;</span><br><span class="line">                    html += <span class="string">&#x27;&lt;tr&gt;&lt;td&gt;&#x27;</span> + <span class="string">&#x27;&lt;input type=&quot;checkbox&quot; name=&quot;bat&quot; value=&quot;&#123;&#123; b.id &#125;&#125;&quot;&gt;&#x27;</span> + <span class="string">&#x27;&lt;/td&gt;&#x27;</span> +</span><br><span class="line">                        <span class="string">&#x27;&lt;td&gt;&#x27;</span> + <span class="built_in">date</span>[i].id + <span class="string">&#x27;&lt;/td&gt;&#x27;</span> +</span><br><span class="line">                        <span class="string">&#x27;&lt;td&gt;&#x27;</span> + <span class="built_in">date</span>[i].bname + <span class="string">&#x27;&lt;/td&gt;&#x27;</span> +</span><br><span class="line">                        <span class="string">&#x27;&lt;td&gt;&#x27;</span> + <span class="built_in">date</span>[i].stock + <span class="string">&#x27;&lt;/td&gt;&#x27;</span> +</span><br><span class="line">                        <span class="string">&#x27;&lt;td&gt;&#x27;</span> + <span class="built_in">date</span>[i].money + <span class="string">&#x27;&lt;/td&gt;&#x27;</span> +</span><br><span class="line">                        <span class="string">&#x27;&lt;td&gt;&#x27;</span> + <span class="built_in">date</span>[i].author_id + <span class="string">&#x27;&lt;/td&gt;&#x27;</span> +</span><br><span class="line">                        <span class="string">&#x27;&lt;td&gt;&#x27;</span> + <span class="built_in">date</span>[i].comment + <span class="string">&#x27;&lt;/td&gt;&lt;/tr&gt;&#x27;</span></span><br><span class="line"></span><br><span class="line">                &#125;</span><br><span class="line">                $(<span class="string">&#x27;#text&#x27;</span>).html(html)</span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="built_in">error</span>: <span class="function"><span class="keyword">function</span> <span class="params">()</span></span> &#123;</span><br><span class="line">                alert(<span class="string">&#x27;error&#x27;</span>)</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></li><li><p>第三步：Views.py   有两种写法，一中序列化器的写法，一个原生的写法</p><h3 id="序列化器的写法"><a href="#序列化器的写法" class="headerlink" title="序列化器的写法"></a>序列化器的写法</h3><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> rest_framework.views import APIView</span><br><span class="line"><span class="keyword">from</span> shop.serializer import BookModelSerializer</span><br><span class="line"></span><br><span class="line">class tiao(APIView):</span><br><span class="line">    def <span class="builtin-name">get</span>(self,request):</span><br><span class="line">        cha = request.GET.<span class="builtin-name">get</span>(<span class="string">&#x27;cha&#x27;</span>)</span><br><span class="line">        v = Books.objects.filter(<span class="attribute">bname__contains</span>=cha).all()   #模糊查询到bname字段中有前端获取关键词的所有值</span><br><span class="line">        serializr = BookModelSerializer(<span class="attribute">instance</span>=v, <span class="attribute">many</span>=<span class="literal">True</span>)      </span><br><span class="line">        date = serializr.data</span><br><span class="line">        return JsonResponse(date,<span class="attribute">safe</span>=<span class="literal">False</span>)</span><br></pre></td></tr></table></figure></li></ul><h3 id="原生的写法"><a href="#原生的写法" class="headerlink" title="原生的写法"></a>原生的写法</h3>   <figure class="highlight plaintext"><figcaption><span>tiao(request):</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">cha = request.POST.get(&#x27;cha&#x27;)</span><br><span class="line">v = Books.objects.filter(bname__contains=cha).all()</span><br><span class="line">data = []</span><br><span class="line">for i in v:</span><br><span class="line">    data_dict = &#123;</span><br><span class="line">        &#x27;bname&#x27;:i.bname,</span><br><span class="line">        &#x27;stock&#x27;:i.stock,</span><br><span class="line">        &#x27;money&#x27;:i.money,</span><br><span class="line">        &#x27;author_id&#x27;:i.author_id_id,</span><br><span class="line">        &#x27;comment&#x27;:i.comment,</span><br><span class="line">    &#125;</span><br><span class="line">    data.append(data_dict)</span><br><span class="line">return JsonResponse(data,safe=False)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> jQuery </tag>
            
            <tag> html </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
