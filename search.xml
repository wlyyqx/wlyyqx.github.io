<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>拦截登录</title>
      <link href="/2021/070249806.html"/>
      <url>/2021/070249806.html</url>
      
        <content type="html"><![CDATA[<p><strong>第一步，自定义中间件：</strong></p><p>   在app下新建文件夹middleware –&gt; 在新建 .py文件         然后导入中间件</p><img src="/2021/070249806/clipboard.png" class><p><strong>第二步，在settings 中配置白名单：</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">WHITE_REGEX_URL_LIST=[</span><br><span class="line">    <span class="string">&#x27;/login/&#x27;</span>,           <span class="comment">#允许可以在不登陆情况下访问的路径</span></span><br><span class="line">]</span><br></pre></td></tr></table></figure><p><strong>第三步在 .py文件中</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 判断用户是否登陆中间件</span></span><br><span class="line"><span class="keyword">from</span> django.utils.deprecation <span class="keyword">import</span> MiddlewareMixin</span><br><span class="line"><span class="keyword">from</span> django.shortcuts <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> kan.models <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> django.conf <span class="keyword">import</span> settings</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">AuthMiddleware</span>(<span class="params">MiddlewareMixin</span>):</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">process_request</span>(<span class="params">self, request</span>):</span></span><br><span class="line">        user_id = request.session.get(<span class="string">&#x27;user_id&#x27;</span>, <span class="number">0</span>)</span><br><span class="line">        user_object = User.objects.<span class="built_in">filter</span>(<span class="built_in">id</span>=user_id).first()</span><br><span class="line"></span><br><span class="line">        <span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">        1.获取用户当前访问的URL</span></span><br><span class="line"><span class="string">        2.检查URL是否在白名单中,如果在,继续访问,如果在则判断是否登录</span></span><br><span class="line"><span class="string">        &#x27;&#x27;&#x27;</span></span><br><span class="line">        <span class="comment"># 白名单:项目不登录就可以访问的页面URL</span></span><br><span class="line">        <span class="keyword">if</span> request.path_info <span class="keyword">in</span> settings.WHITE_REGEX_URL_LIST:  <span class="comment"># request.path_info获取当前访问URL</span></span><br><span class="line">            <span class="keyword">return</span>  <span class="comment"># 中间件 默认return 空</span></span><br><span class="line">        <span class="comment"># 检查用户是否登录,已登录往前走,未登录返回登录页面</span></span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> user_object:</span><br><span class="line">            <span class="keyword">return</span> redirect(reverse(<span class="string">&#x27;login&#x27;</span>))</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>批量删除</title>
      <link href="/2021/0702156505.html"/>
      <url>/2021/0702156505.html</url>
      
        <content type="html"><![CDATA[<p><strong>第一步：配置子路由</strong>：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">path(<span class="string">&#x27;bathdet/&#x27;</span>,views.bathdet,name=<span class="string">&#x27;bathdet&#x27;</span>),</span><br></pre></td></tr></table></figure><p><strong>第二步：HTML页面：</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//一定要传值value 否则拿不到值</span></span><br><span class="line"></span><br><span class="line">&lt;td&gt;<span class="xml"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">name</span>=<span class="string">&quot;bat&quot;</span> <span class="attr">value</span>=<span class="string">&quot;&#123;&#123; b.id &#125;&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span> </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//发送ajax请求</span></span><br><span class="line"></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.staticfile.org/jquery/2.1.1/jquery.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span></span><br><span class="line"><span class="javascript"><span class="xml"></span></span></span><br><span class="line"><span class="javascript"><span class="xml">​    <span class="keyword">var</span> list=[];               <span class="comment">//定义一个空列表</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml"></span></span></span><br><span class="line"><span class="javascript"><span class="xml">​    bat = <span class="built_in">document</span>.getElementsByName(<span class="string">&#x27;bat&#x27;</span>);      <span class="comment">//获取所有选择框</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml"></span></span></span><br><span class="line"><span class="javascript"><span class="xml">​    <span class="function"><span class="keyword">function</span> <span class="title">a</span>(<span class="params"></span>)</span>&#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml"></span></span></span><br><span class="line"><span class="javascript"><span class="xml">​        <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt;bat.length ; i++) &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml"></span></span></span><br><span class="line"><span class="javascript"><span class="xml">​            <span class="keyword">if</span> (bat[i].checked===<span class="literal">true</span>)&#123;         <span class="comment">//判断如果选择了那个</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml"></span></span></span><br><span class="line"><span class="javascript"><span class="xml">​                list.push(bat[i].value);        <span class="comment">//就把哪个的值 添加到空列表list</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml"></span></span></span><br><span class="line"><span class="javascript"><span class="xml">​            &#125;</span></span></span><br><span class="line"><span class="javascript"><span class="xml"></span></span></span><br><span class="line"><span class="javascript"><span class="xml">​        &#125;</span></span></span><br><span class="line"><span class="javascript"><span class="xml"></span></span></span><br><span class="line"><span class="javascript"><span class="xml">​        $.ajax(&#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml"></span></span></span><br><span class="line"><span class="javascript"><span class="xml">​            url:<span class="string">&quot;&#123;% url &#x27;bathdet&#x27; %&#125;&quot;</span>,        </span></span></span><br><span class="line"><span class="javascript"><span class="xml"></span></span></span><br><span class="line"><span class="javascript"><span class="xml">​            type:<span class="string">&#x27;POST&#x27;</span>,</span></span></span><br><span class="line"><span class="javascript"><span class="xml"></span></span></span><br><span class="line"><span class="javascript"><span class="xml">​            data:(&#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml"></span></span></span><br><span class="line"><span class="javascript"><span class="xml">​                <span class="string">&#x27;list&#x27;</span>:list                 <span class="comment">//传值</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml"></span></span></span><br><span class="line"><span class="javascript"><span class="xml">​            &#125;),</span></span></span><br><span class="line"><span class="javascript"><span class="xml"></span></span></span><br><span class="line"><span class="javascript"><span class="xml">​            traditional:<span class="literal">true</span>,           <span class="comment">//传多个参数时使用</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml"></span></span></span><br><span class="line"><span class="javascript"><span class="xml">​            success:<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml"></span></span></span><br><span class="line"><span class="javascript"><span class="xml">​                alert(<span class="string">&#x27;success&#x27;</span>)</span></span></span><br><span class="line"><span class="javascript"><span class="xml"></span></span></span><br><span class="line"><span class="javascript"><span class="xml">​            &#125;,</span></span></span><br><span class="line"><span class="javascript"><span class="xml"></span></span></span><br><span class="line"><span class="javascript"><span class="xml">​            error:<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml"></span></span></span><br><span class="line"><span class="javascript"><span class="xml">​                alert(<span class="string">&#x27;error&#x27;</span>)</span></span></span><br><span class="line"><span class="javascript"><span class="xml"></span></span></span><br><span class="line"><span class="javascript"><span class="xml">​            &#125;</span></span></span><br><span class="line"><span class="javascript"><span class="xml"></span></span></span><br><span class="line"><span class="javascript"><span class="xml">​        &#125;)</span></span></span><br><span class="line"><span class="javascript"><span class="xml"></span></span></span><br><span class="line"><span class="javascript"><span class="xml">​    &#125;</span></span></span><br><span class="line"><span class="javascript"><span class="xml"></span></span></span><br><span class="line"><span class="javascript"><span class="xml"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"><span class="xml"></span></span><br><span class="line"><span class="xml">//按钮绑定 onclick 事件</span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;&#123;% url &#x27;bathdet&#x27; %&#125;&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">button</span> <span class="attr">onclick</span>=<span class="string">&quot;a()&quot;</span>&gt;</span>批量删除<span class="tag">&lt;/<span class="name">button</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span></span><br></pre></td></tr></table></figure><p><strong>第三步 ： 视图</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">**全选按钮：**</span><br><span class="line"></span><br><span class="line">$(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line"></span><br><span class="line">​    $(<span class="string">&quot;input[name=all]&quot;</span>).click(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;      <span class="comment">//all 是全选按钮的name属性值</span></span><br><span class="line"></span><br><span class="line">​        <span class="keyword">if</span> (<span class="built_in">this</span>.checked)&#123;</span><br><span class="line"></span><br><span class="line">​            $(<span class="string">&quot;#tbody :checkbox&quot;</span>).prop(<span class="string">&quot;checked&quot;</span>,<span class="literal">true</span>);   <span class="comment">//把要被全选的checkbox放入一个tbody里</span></span><br><span class="line"></span><br><span class="line">​        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line"></span><br><span class="line">​            $(<span class="string">&quot;#tbody :checkbox&quot;</span>).prop(<span class="string">&quot;checked&quot;</span>,<span class="literal">false</span>)</span><br><span class="line"></span><br><span class="line">​        &#125;</span><br><span class="line"></span><br><span class="line">​    &#125;)</span><br><span class="line"></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Django </tag>
            
            <tag> Ajax </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vue+django跨域</title>
      <link href="/2021/07012.html"/>
      <url>/2021/07012.html</url>
      
        <content type="html"><![CDATA[<h2 id="跨域"><a href="#跨域" class="headerlink" title="跨域"></a>跨域</h2><p>由于开发模式为前后端分离式开发，故而通常情况下，前端和后端可能运行不同的ip或者port下，导致出现跨域问题</p><h6 id="什么是同源策略？"><a href="#什么是同源策略？" class="headerlink" title="什么是同源策略？"></a>什么是同源策略？</h6><p>​    如果缺少了同源策略，浏览器很容易受到XSS、CSFR等攻击。所谓同源是<br>​    指”协议 +域名+端口”三者相同，即便两个不同的域名指向同一个ip地<br>​    址，也非同源</p><h6 id="同源策略限制以下几种行为："><a href="#同源策略限制以下几种行为：" class="headerlink" title="同源策略限制以下几种行为："></a>同源策略限制以下几种行为：</h6><p>1 . Cookie、LocalStorage 和 IndexDB 无法读取<br>2 . DOM 和 Js对象无法获得<br>3 . AJAX 请求不能发送</p><h3 id="前端解决跨域"><a href="#前端解决跨域" class="headerlink" title="前端解决跨域"></a>前端解决跨域</h3><h4 id="既然跨域是因为不同源，那我同源不就完事儿了，但是后端请求地址不可能改"><a href="#既然跨域是因为不同源，那我同源不就完事儿了，但是后端请求地址不可能改" class="headerlink" title="既然跨域是因为不同源，那我同源不就完事儿了，但是后端请求地址不可能改"></a>既然跨域是因为不同源，那我同源不就完事儿了，但是后端请求地址不可能改</h4><h4 id="变，所以可以在前端和后端的中间加一层代理，前端通过代理访问后端。"><a href="#变，所以可以在前端和后端的中间加一层代理，前端通过代理访问后端。" class="headerlink" title="变，所以可以在前端和后端的中间加一层代理，前端通过代理访问后端。"></a>变，所以可以在前端和后端的中间加一层代理，前端通过代理访问后端。</h4><p>在Vue-cli工具中已经提供了代理的功能，只需要配置即可。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span> 在根目录下的config/index.js文件中有如下配置项：</span><br><span class="line"><span class="number">2</span> proxyTable: &#123;</span><br><span class="line">    <span class="string">&#x27;/&#x27;</span>: &#123;</span><br><span class="line">        target: <span class="string">&#x27;http://127.0.0.1:8000/&#x27;</span>,</span><br><span class="line">        changeOrigin: true,</span><br><span class="line">        pathRewrite: &#123;</span><br><span class="line">            <span class="string">&#x27;^/api&#x27;</span>: <span class="string">&#x27;&#x27;</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;,</span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li>‘/‘表示以’/‘(即所有的路径)开头的路径均需要代理</li><li>target：代理的目标服务器地址（即后端服务器地址）为<br>‘<a href="http://127.0.0.1:8000/&#39;">http://127.0.0.1:8000/&#39;</a></li><li>changeOrigin：为修改源：修改请求中的源地址    </li><li>pathReWrite：URL路径重写，对于以’/api’开头的路径将’/api’替换<br>为’’</li></ul><h1 id="后端解决跨域"><a href="#后端解决跨域" class="headerlink" title="后端解决跨域"></a>后端解决跨域</h1><p>安装django-cors-headers</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line">INSTALLED_APPS = [</span><br><span class="line">    ...</span><br><span class="line">    <span class="string">&#x27;corsheaders&#x27;</span>，</span><br><span class="line">    ...</span><br><span class="line"> ] </span><br><span class="line"> </span><br><span class="line"> MIDDLEWARE_CLASSES = (</span><br><span class="line">    ...</span><br><span class="line">    <span class="string">&#x27;corsheaders.middleware.CorsMiddleware&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;django.middleware.common.CommonMiddleware&#x27;</span>, <span class="comment"># 注意顺序</span></span><br><span class="line">    ...</span><br><span class="line">)</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"> <span class="comment">#跨域增加忽略</span></span><br><span class="line">CORS_ALLOW_CREDENTIALS = <span class="literal">True</span></span><br><span class="line">CORS_ORIGIN_ALLOW_ALL = <span class="literal">True</span></span><br><span class="line">CORS_ORIGIN_WHITELIST = (</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line">CORS_ALLOW_METHODS = (</span><br><span class="line">    <span class="string">&#x27;DELETE&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;GET&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;OPTIONS&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;PATCH&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;POST&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;PUT&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;VIEW&#x27;</span>,</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line">CORS_ALLOW_HEADERS = (</span><br><span class="line">    <span class="string">&#x27;XMLHttpRequest&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;X_FILENAME&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;accept-encoding&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;authorization&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;content-type&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;dnt&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;origin&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;user-agent&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;x-csrftoken&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;x-requested-with&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;Pragma&#x27;</span>,</span><br><span class="line">)</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> Django </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>模糊查询</title>
      <link href="/2021/062915650.html"/>
      <url>/2021/062915650.html</url>
      
        <content type="html"><![CDATA[<h2 id="如果使用序列化的方法，先要创建序列化器"><a href="#如果使用序列化的方法，先要创建序列化器" class="headerlink" title="如果使用序列化的方法，先要创建序列化器"></a>如果使用序列化的方法，先要创建序列化器</h2><ul><li>第一步：配置子路由：<br>path(‘tiao/‘,views.tiao.as_view(),name=’tiao’)</li></ul><ul><li><p>第二步：HTML页面：<br><code>&lt;input type=&quot;text&quot; id=&quot;cha&quot;&gt; &lt;button onclick=&quot;tiaojian()&quot;&gt;查询&lt;/button&gt; </code>  </p></li><li><p>写一个按钮触发函数</p><figure class="highlight lua"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">tiaojian</span><span class="params">()</span></span> &#123;</span><br><span class="line">        var a = $(<span class="string">&#x27;#cha&#x27;</span>).val();</span><br><span class="line">        </span><br><span class="line">        $.ajax(&#123;</span><br><span class="line">            url: <span class="string">&quot;&#123;% url &#x27;tiao&#x27; %&#125;&quot;</span>,</span><br><span class="line">            <span class="built_in">type</span>: <span class="string">&#x27;GET&#x27;</span>,           #get请求或者post请求都可以</span><br><span class="line">            data: (&#123;</span><br><span class="line">                <span class="string">&#x27;cha&#x27;</span>: a           #把获取到的值定义为‘cha’ 传到后端 </span><br><span class="line">            &#125;),</span><br><span class="line">            success: <span class="function"><span class="keyword">function</span> <span class="params">(date)</span></span> &#123;</span><br><span class="line">                var html = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">                <span class="keyword">for</span> (var i = <span class="number">0</span>; i &lt; <span class="built_in">date</span>.length; i++) &#123;</span><br><span class="line">                    html += <span class="string">&#x27;&lt;tr&gt;&lt;td&gt;&#x27;</span> + <span class="string">&#x27;&lt;input type=&quot;checkbox&quot; name=&quot;bat&quot; value=&quot;&#123;&#123; b.id &#125;&#125;&quot;&gt;&#x27;</span> + <span class="string">&#x27;&lt;/td&gt;&#x27;</span> +</span><br><span class="line">                        <span class="string">&#x27;&lt;td&gt;&#x27;</span> + <span class="built_in">date</span>[i].id + <span class="string">&#x27;&lt;/td&gt;&#x27;</span> +</span><br><span class="line">                        <span class="string">&#x27;&lt;td&gt;&#x27;</span> + <span class="built_in">date</span>[i].bname + <span class="string">&#x27;&lt;/td&gt;&#x27;</span> +</span><br><span class="line">                        <span class="string">&#x27;&lt;td&gt;&#x27;</span> + <span class="built_in">date</span>[i].stock + <span class="string">&#x27;&lt;/td&gt;&#x27;</span> +</span><br><span class="line">                        <span class="string">&#x27;&lt;td&gt;&#x27;</span> + <span class="built_in">date</span>[i].money + <span class="string">&#x27;&lt;/td&gt;&#x27;</span> +</span><br><span class="line">                        <span class="string">&#x27;&lt;td&gt;&#x27;</span> + <span class="built_in">date</span>[i].author_id + <span class="string">&#x27;&lt;/td&gt;&#x27;</span> +</span><br><span class="line">                        <span class="string">&#x27;&lt;td&gt;&#x27;</span> + <span class="built_in">date</span>[i].comment + <span class="string">&#x27;&lt;/td&gt;&lt;/tr&gt;&#x27;</span></span><br><span class="line"></span><br><span class="line">                &#125;</span><br><span class="line">                $(<span class="string">&#x27;#text&#x27;</span>).html(html)</span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="built_in">error</span>: <span class="function"><span class="keyword">function</span> <span class="params">()</span></span> &#123;</span><br><span class="line">                alert(<span class="string">&#x27;error&#x27;</span>)</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></li><li><p>第三步：Views.py   有两种写法，一中序列化器的写法，一个原生的写法</p><h3 id="序列化器的写法"><a href="#序列化器的写法" class="headerlink" title="序列化器的写法"></a>序列化器的写法</h3><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> rest_framework.views import APIView</span><br><span class="line"><span class="keyword">from</span> shop.serializer import BookModelSerializer</span><br><span class="line"></span><br><span class="line">class tiao(APIView):</span><br><span class="line">    def <span class="builtin-name">get</span>(self,request):</span><br><span class="line">        cha = request.GET.<span class="builtin-name">get</span>(<span class="string">&#x27;cha&#x27;</span>)</span><br><span class="line">        v = Books.objects.filter(<span class="attribute">bname__contains</span>=cha).all()   #模糊查询到bname字段中有前端获取关键词的所有值</span><br><span class="line">        serializr = BookModelSerializer(<span class="attribute">instance</span>=v, <span class="attribute">many</span>=<span class="literal">True</span>)      </span><br><span class="line">        date = serializr.data</span><br><span class="line">        return JsonResponse(date,<span class="attribute">safe</span>=<span class="literal">False</span>)</span><br></pre></td></tr></table></figure></li></ul><h3 id="原生的写法"><a href="#原生的写法" class="headerlink" title="原生的写法"></a>原生的写法</h3>   <figure class="highlight plaintext"><figcaption><span>tiao(request):</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">cha = request.POST.get(&#x27;cha&#x27;)</span><br><span class="line">v = Books.objects.filter(bname__contains=cha).all()</span><br><span class="line">data = []</span><br><span class="line">for i in v:</span><br><span class="line">    data_dict = &#123;</span><br><span class="line">        &#x27;bname&#x27;:i.bname,</span><br><span class="line">        &#x27;stock&#x27;:i.stock,</span><br><span class="line">        &#x27;money&#x27;:i.money,</span><br><span class="line">        &#x27;author_id&#x27;:i.author_id_id,</span><br><span class="line">        &#x27;comment&#x27;:i.comment,</span><br><span class="line">    &#125;</span><br><span class="line">    data.append(data_dict)</span><br><span class="line">return JsonResponse(data,safe=False)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> jQuery </tag>
            
            <tag> Ajax </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>视图集额外动作</title>
      <link href="/2021/062954766.html"/>
      <url>/2021/062954766.html</url>
      
        <content type="html"><![CDATA[<h2 id="视图集额外动作："><a href="#视图集额外动作：" class="headerlink" title="视图集额外动作："></a>视图集额外动作：</h2><h3 id="目的：给视图集添加额外的动作（方法）"><a href="#目的：给视图集添加额外的动作（方法）" class="headerlink" title="目的：给视图集添加额外的动作（方法）"></a>目的：给视图集添加额外的动作（方法）</h3><h3 id="1，子路由："><a href="#1，子路由：" class="headerlink" title="1，子路由："></a>1，子路由：</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span> urlpatterns=[</span><br><span class="line"><span class="number">2</span> path(<span class="string">&#x27;books/&#x27;</span>,views.BookInfoModelViewSet.as_view(&#123;<span class="string">&#x27;get&#x27;</span>:<span class="string">&#x27;list&#x27;</span>,<span class="string">&#x27;post&#x27;</span>:<span class="string">&#x27;c</span></span><br><span class="line"><span class="string">reate&#x27;</span>&#125;)),</span><br><span class="line"><span class="number">3</span> path(<span class="string">&#x27;books/&lt;int:pk&gt;&#x27;</span>,views.BookInfoModelViewSet.as_view(&#123;<span class="string">&#x27;get&#x27;</span>: <span class="string">&#x27;retrie</span></span><br><span class="line"><span class="string">ve&#x27;</span>,<span class="string">&#x27;put&#x27;</span>:<span class="string">&#x27;update&#x27;</span>,<span class="string">&#x27;delete&#x27;</span>:<span class="string">&#x27;destroy&#x27;</span>&#125;)),</span><br><span class="line"><span class="number">4</span></span><br><span class="line"><span class="number">5</span> path(<span class="string">&#x27;books/bread/&#x27;</span>,views.BookInfoModelViewSet.as_view(&#123;<span class="string">&#x27;get&#x27;</span>: <span class="string">&#x27;bread_bo</span></span><br><span class="line"><span class="string">ok&#x27;</span>&#125;))</span><br><span class="line"><span class="number">6</span> ]</span><br></pre></td></tr></table></figure><h4 id="2，类视图："><a href="#2，类视图：" class="headerlink" title="2，类视图："></a>2，类视图：</h4><h5 id="1-视图集"><a href="#1-视图集" class="headerlink" title="1 #视图集"></a>1 #视图集</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">2</span> <span class="keyword">from</span> rest_framework.response <span class="keyword">import</span> Response</span><br><span class="line"><span class="number">3</span> <span class="keyword">from</span> rest_framework.viewsets <span class="keyword">import</span> ModelViewSet</span><br><span class="line"><span class="number">4</span></span><br><span class="line"><span class="number">5</span> <span class="keyword">from</span> booktest.models <span class="keyword">import</span> BookInfo</span><br><span class="line"><span class="number">6</span> <span class="keyword">from</span> booktest.serializer <span class="keyword">import</span> BookInfoModelSerializer</span><br><span class="line"><span class="number">7</span></span><br><span class="line"><span class="number">8</span> <span class="class"><span class="keyword">class</span> <span class="title">BookInfoModelViewSet</span>(<span class="params">ModelViewSet</span>):</span></span><br><span class="line"><span class="number">9</span> <span class="comment">#公共属性</span></span><br><span class="line"><span class="number">10</span> queryset = BookInfo.objects.<span class="built_in">all</span>()</span><br><span class="line"><span class="number">11</span> serializer_class = BookInfoModelSerializer</span><br><span class="line"><span class="number">12</span></span><br><span class="line"><span class="number">13</span> <span class="comment">#1获取阅读量大于 20 的书籍</span></span><br><span class="line"><span class="number">14</span> <span class="function"><span class="keyword">def</span> <span class="title">bread_book</span>(<span class="params">self,request</span>):</span></span><br><span class="line"><span class="number">15</span> <span class="comment">#获取书籍</span></span><br><span class="line"><span class="number">16</span> books = BookInfo.objects.<span class="built_in">filter</span>(bread__gt= <span class="number">20</span> )</span><br><span class="line"><span class="number">17</span> <span class="comment">#创建序列化器对象</span></span><br><span class="line"><span class="number">18</span> serializer = self.get_serializer(instance=books,many=<span class="literal">True</span>)</span><br><span class="line"><span class="number">19</span></span><br><span class="line"><span class="number">20</span> <span class="keyword">return</span> Response(serializer.data)</span><br></pre></td></tr></table></figure><h3 id="视图集额外动作-partial："><a href="#视图集额外动作-partial：" class="headerlink" title="视图集额外动作 partial："></a>视图集额外动作 partial：</h3><h4 id="目的：给视图集添加额外的动作参数，并且更新局部信息"><a href="#目的：给视图集添加额外的动作参数，并且更新局部信息" class="headerlink" title="目的：给视图集添加额外的动作参数，并且更新局部信息"></a>目的：给视图集添加额外的动作参数，并且更新局部信息</h4><h2 id="1，子路由：-1"><a href="#1，子路由：-1" class="headerlink" title="1，子路由："></a>1，子路由：</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span> path(<span class="string">&#x27;books/bread/&lt;int:pk&gt;&#x27;</span>,views.BookInfoModelViewSet.as_view(&#123;<span class="string">&#x27;put&#x27;</span>: <span class="string">&#x27;u</span></span><br><span class="line"><span class="string">pdate_book&#x27;</span>&#125;))</span><br></pre></td></tr></table></figure><h4 id="2，类视图：-1"><a href="#2，类视图：-1" class="headerlink" title="2，类视图："></a>2，类视图：</h4><h5 id="1"><a href="#1" class="headerlink" title="1"></a>1</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">2</span> <span class="class"><span class="keyword">class</span> <span class="title">BookInfoModelViewSet</span>(<span class="params">ModelViewSet</span>):</span></span><br><span class="line"><span class="number">3</span> <span class="comment">#公共属性</span></span><br><span class="line"><span class="number">4</span> queryset = BookInfo.objects.<span class="built_in">all</span>()</span><br><span class="line"><span class="number">5</span> serializer_class = BookInfoModelSerializer</span><br><span class="line"><span class="number">6</span> ...</span><br><span class="line"><span class="number">7</span></span><br><span class="line"><span class="number">8</span> <span class="comment">#2，修改书籍编号为 1 ，阅读量为 99</span></span><br><span class="line"><span class="number">9</span> <span class="function"><span class="keyword">def</span> <span class="title">update_book</span>(<span class="params">self,request,pk</span>):</span></span><br><span class="line"><span class="number">10</span> <span class="comment">#获取参数</span></span><br><span class="line"><span class="number">11</span> book = self.get_object()</span><br><span class="line"><span class="number">12</span> data = request.data</span><br><span class="line"><span class="number">13</span> <span class="comment">#创建序列化器</span></span><br><span class="line"><span class="number">14</span> serializer = self.get_serializer(instance =</span><br><span class="line">book,data=data,partial=<span class="literal">True</span>)</span><br><span class="line"><span class="number">15</span> <span class="comment">#检验入库</span></span><br><span class="line"><span class="number">16</span> serializer.is_valid(raise_exception=<span class="literal">True</span>)</span><br><span class="line"><span class="number">17</span> serializer.save()</span><br><span class="line"><span class="number">18</span> <span class="comment">#返回响应</span></span><br><span class="line"><span class="number">19</span> <span class="keyword">return</span> Response(serializer.data,status= <span class="number">201</span> )</span><br></pre></td></tr></table></figure><h1 id="路由router"><a href="#路由router" class="headerlink" title="路由router:"></a>路由router:</h1><h4 id="目的：可以通过-DefaultRouter-和-SimpleRouter-两个类来自动生成路由"><a href="#目的：可以通过-DefaultRouter-和-SimpleRouter-两个类来自动生成路由" class="headerlink" title="目的：可以通过 DefaultRouter 和 SimpleRouter 两个类来自动生成路由"></a>目的：可以通过 DefaultRouter 和 SimpleRouter 两个类来自动生成路由</h4><h4 id><a href="#" class="headerlink" title></a></h4><h4 id="DefaultRouter-共有三对路由："><a href="#DefaultRouter-共有三对路由：" class="headerlink" title="DefaultRouter 共有三对路由："></a>DefaultRouter 共有三对路由：</h4><h5 id="1-1"><a href="#1-1" class="headerlink" title="1"></a>1</h5><h5 id="2-列表路由"><a href="#2-列表路由" class="headerlink" title="2 #列表路由"></a>2 #列表路由</h5><h5 id="3"><a href="#3" class="headerlink" title="3 ["></a>3 [</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">4</span> &lt;URLPattern <span class="string">&#x27;^books/$&#x27;</span> [name=<span class="string">&#x27;hhh‐list&#x27;</span>]&gt;,</span><br><span class="line"><span class="number">5</span> &lt;URLPattern <span class="string">&#x27;^books\.(?P&lt;format&gt;[a‐z0‐9]+)/?$&#x27;</span> [name=<span class="string">&#x27;hhh‐list&#x27;</span>]&gt;,</span><br><span class="line"><span class="number">6</span> <span class="comment">#详情路由</span></span><br><span class="line"><span class="number">7</span> &lt;URLPattern <span class="string">&#x27;^books/(?P&lt;pk&gt;[^/.]+)/$&#x27;</span> [name=<span class="string">&#x27;hhh‐detail&#x27;</span>]&gt;,</span><br><span class="line"><span class="number">8</span> &lt;URLPattern <span class="string">&#x27;^books/(?P&lt;pk&gt;[^/.]+)\.(?P&lt;format&gt;[a‐z0‐9]+)/?$&#x27;</span> [name=<span class="string">&#x27;hhh‐</span></span><br><span class="line"><span class="string">detail&#x27;</span>]&gt;,</span><br><span class="line"><span class="number">9</span> <span class="comment">#根路由</span></span><br><span class="line"><span class="number">10</span> &lt;URLPattern <span class="string">&#x27;^$&#x27;</span> [name=<span class="string">&#x27;api‐root&#x27;</span>]&gt;,</span><br><span class="line"><span class="number">11</span> &lt;URLPattern <span class="string">&#x27;^\.(?P&lt;format&gt;[a‐z0‐9]+)/?$&#x27;</span> [name=<span class="string">&#x27;api‐root&#x27;</span>]&gt;</span><br><span class="line"><span class="number">12</span> ]</span><br><span class="line"><span class="number">1</span> <span class="keyword">from</span> rest_framework.routers <span class="keyword">import</span> SimpleRouter,DefaultRouter</span><br><span class="line"><span class="number">2</span> <span class="comment">#创建路由对象</span></span><br><span class="line"><span class="number">3</span> router = DefaultRouter()</span><br><span class="line"><span class="number">4</span></span><br><span class="line"><span class="number">5</span> <span class="comment">#注册视图集</span></span><br><span class="line"><span class="number">6</span> router.register(<span class="string">&#x27;books&#x27;</span>,views.BookInfoModelViewSet,basename=<span class="string">&#x27;hhh&#x27;</span>)</span><br><span class="line"><span class="number">7</span> urlpatterns += router.urls</span><br><span class="line"><span class="number">8</span> <span class="comment">#输出结果</span></span><br><span class="line"><span class="number">9</span> <span class="built_in">print</span>(urlpatterns)</span><br></pre></td></tr></table></figure><h4 id="SimpleRouter-格式："><a href="#SimpleRouter-格式：" class="headerlink" title="SimpleRouter 格式："></a>SimpleRouter 格式：</h4><h5 id="1-2"><a href="#1-2" class="headerlink" title="1 ["></a>1 [</h5><h5 id="2-列表路由-1"><a href="#2-列表路由-1" class="headerlink" title="2 #列表路由"></a>2 #列表路由</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">3</span> &lt;URLPattern <span class="string">&#x27;^books/$&#x27;</span> [name=<span class="string">&#x27;hhh‐list&#x27;</span>]&gt;,</span><br><span class="line"><span class="number">4</span> <span class="comment">#视图路由</span></span><br><span class="line"><span class="number">5</span> &lt;URLPattern <span class="string">&#x27;^books/(?P&lt;pk&gt;[^/.]+)/$&#x27;</span> [name=<span class="string">&#x27;hhh‐detail&#x27;</span>]&gt;</span><br><span class="line"><span class="number">6</span> ]</span><br></pre></td></tr></table></figure><h4 id="使用DRF-可以自动根据前端需要的类型，返回对应格式数据"><a href="#使用DRF-可以自动根据前端需要的类型，返回对应格式数据" class="headerlink" title="* 使用DRF 可以自动根据前端需要的类型，返回对应格式数据"></a>* 使用DRF 可以自动根据前端需要的类型，返回对应格式数据</h4><h4 id="请求的时候-在请求头中标记-Accept-即可"><a href="#请求的时候-在请求头中标记-Accept-即可" class="headerlink" title="* 请求的时候 在请求头中标记 Accept 即可"></a>* 请求的时候 在请求头中标记 Accept 即可</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span> <span class="keyword">from</span> rest_framework.routers <span class="keyword">import</span> SimpleRouter,DefaultRouter</span><br><span class="line"><span class="number">2</span> <span class="comment">#创建路由对象</span></span><br><span class="line"><span class="number">3</span> router = SimpleRouter()</span><br><span class="line"><span class="number">4</span> <span class="comment">#注册视图集</span></span><br><span class="line"><span class="number">5</span> router.register(<span class="string">&#x27;books&#x27;</span>,views.BookInfoModelViewSet,basename=<span class="string">&#x27;hhh&#x27;</span>)</span><br><span class="line"><span class="number">6</span> urlpatterns += router.urls</span><br><span class="line"><span class="number">7</span> <span class="comment">#输出结果</span></span><br><span class="line"><span class="number">8</span> <span class="built_in">print</span>(urlpatterns)</span><br></pre></td></tr></table></figure><h1 id="装饰-action"><a href="#装饰-action" class="headerlink" title="装饰 action"></a>装饰 action</h1><h2 id="可以通过-action-装饰方法，自动生成路由"><a href="#可以通过-action-装饰方法，自动生成路由" class="headerlink" title="可以通过 action 装饰方法，自动生成路由"></a>可以通过 action 装饰方法，自动生成路由</h2><h4 id="类视图："><a href="#类视图：" class="headerlink" title="类视图："></a>类视图：</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span> <span class="keyword">from</span> rest_framework.decorators <span class="keyword">import</span> action</span><br><span class="line"><span class="number">2</span> <span class="class"><span class="keyword">class</span> <span class="title">BookInfoModelViewSet</span>(<span class="params">ModelViewSet</span>):</span></span><br><span class="line"><span class="number">3</span> <span class="comment">#公共属性</span></span><br><span class="line"><span class="number">4</span> ...</span><br><span class="line"><span class="number">5</span> <span class="comment">#1获取阅读量大于 20 的书籍</span></span><br><span class="line"><span class="number">6</span> @action(methods=[<span class="string">&#x27;GET&#x27;</span>],detail=<span class="literal">False</span>) <span class="comment">#生成路由规则 ： 前缀/方法名/</span></span><br><span class="line"><span class="number">7</span> <span class="function"><span class="keyword">def</span> <span class="title">bread_book</span>(<span class="params">self,request</span>):</span></span><br><span class="line"><span class="number">8</span> ...</span><br><span class="line"><span class="number">9</span></span><br><span class="line"><span class="number">10</span> <span class="comment">#2，修改书籍编号为 1 ，阅读量为 99</span></span><br><span class="line"><span class="number">11</span> @action(methods=[<span class="string">&#x27;PUT&#x27;</span>],detail=<span class="literal">True</span>) <span class="comment">#生成路由规则：前缀/&#123;pk&#125;/方法名/</span></span><br><span class="line"><span class="number">12</span> <span class="function"><span class="keyword">def</span> <span class="title">update_book</span>(<span class="params">self,request,pk</span>):</span></span><br><span class="line"><span class="number">13</span> ...</span><br></pre></td></tr></table></figure><h4 id="生成的路由："><a href="#生成的路由：" class="headerlink" title="生成的路由："></a>生成的路由：</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">2</span> [&lt;URLPattern <span class="string">&#x27;^books/$&#x27;</span> [name=<span class="string">&#x27;hhh‐list&#x27;</span>]&gt;,</span><br><span class="line"><span class="number">3</span> &lt;URLPattern <span class="string">&#x27;^books/bread_book/$&#x27;</span> [name=<span class="string">&#x27;hhh‐bread‐book&#x27;</span>]&gt;,</span><br><span class="line"><span class="number">4</span> &lt;URLPattern <span class="string">&#x27;^books/(?P&lt;pk&gt;[^/.]+)/$&#x27;</span> [name=<span class="string">&#x27;hhh‐detail&#x27;</span>]&gt;]</span><br></pre></td></tr></table></figure><h2 id="认证-Authentication-："><a href="#认证-Authentication-：" class="headerlink" title="认证 Authentication ："></a>认证 Authentication ：</h2><h4 id="全局配置：-settiongs-py"><a href="#全局配置：-settiongs-py" class="headerlink" title="全局配置：(settiongs.py)"></a>全局配置：(settiongs.py)</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">REST_FRAMEWORK = &#123;</span><br><span class="line">    <span class="string">&#x27;DEFAULT‐AUTHENTICATION_CLASSES&#x27;</span>:[</span><br><span class="line">        <span class="string">&#x27;rest_framework.authentication.BasicAuthentication&#x27;</span>,</span><br><span class="line"><span class="number">4</span> <span class="string">&#x27;rest_framework.authentication.SessionAuthentication&#x27;</span> <span class="comment">#自己服务器认证用户</span></span><br><span class="line"><span class="number">5</span> ]</span><br><span class="line"><span class="number">6</span> &#125;</span><br></pre></td></tr></table></figure><h4 id="局部配置：-views-py"><a href="#局部配置：-views-py" class="headerlink" title="局部配置：(views.py)"></a>局部配置：(views.py)</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span> <span class="keyword">from</span> rest_framework.authentication <span class="keyword">import</span> SessionAuthentication,BasicAuth</span><br><span class="line">entication</span><br><span class="line"><span class="number">2</span></span><br><span class="line"><span class="number">3</span> <span class="class"><span class="keyword">class</span> <span class="title">BookInfoModelViewSet</span>(<span class="params">ModelViewSet</span>):</span></span><br><span class="line"><span class="number">4</span> ...</span><br><span class="line"><span class="number">5</span> <span class="comment">#局部认证</span></span><br><span class="line"><span class="number">6</span> authentication_classes = [SessionAuthentication,BasicAuthentication]</span><br></pre></td></tr></table></figure><h4 id="如果配置了全局和局部，默认是局部"><a href="#如果配置了全局和局部，默认是局部" class="headerlink" title="如果配置了全局和局部，默认是局部"></a>如果配置了全局和局部，默认是局部</h4><h2 id="权限-Permissions"><a href="#权限-Permissions" class="headerlink" title="权限 Permissions :"></a>权限 Permissions :</h2><h4 id="全局权限："><a href="#全局权限：" class="headerlink" title="全局权限："></a>全局权限：</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">REST_FRAMEWORK = &#123;</span><br><span class="line">    <span class="comment">#全局认证</span></span><br><span class="line">    <span class="string">&#x27;DEFAULT‐AUTHENTICATION_CLASSES&#x27;</span>[</span><br><span class="line">        <span class="string">&#x27;rest_framework.authentication.BasicAuthentication&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;rest_framework.authentication.SessionAuthentication&#x27;</span> <span class="comment">#自己服务器认证用户</span></span><br><span class="line"><span class="number">6</span> ],</span><br><span class="line"><span class="number">7</span> <span class="comment">#全局权限</span></span><br><span class="line"><span class="number">8</span> <span class="string">&#x27;DEFAULT_PERMISSION_CLASSES&#x27;</span>:[</span><br><span class="line"><span class="number">9</span> <span class="comment"># &#x27;rest_framework.permissions.IsAuthenticated&#x27;, #普通用户</span></span><br><span class="line"><span class="number">10</span> <span class="comment"># &#x27;rest_framework.permissions.AllowAny&#x27;, #所有用户</span></span><br><span class="line"><span class="number">11</span> <span class="string">&#x27;rest_framework.permissions.IsAdminUser&#x27;</span>, <span class="comment">#管理员用户</span></span><br><span class="line"><span class="number">12</span> ]</span><br><span class="line"><span class="number">13</span> &#125;</span><br></pre></td></tr></table></figure><h4 id="局部权限："><a href="#局部权限：" class="headerlink" title="局部权限："></a>局部权限：</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span> <span class="keyword">from</span> rest_framework.permissions <span class="keyword">import</span> AllowAny</span><br><span class="line"><span class="number">2</span></span><br><span class="line"><span class="number">3</span> <span class="class"><span class="keyword">class</span> <span class="title">BookInfoModelViewSet</span>(<span class="params">ModelViewSet</span>):</span></span><br><span class="line"><span class="number">4</span> ...</span><br><span class="line"><span class="number">5</span> <span class="comment">#2，局部权限</span></span><br><span class="line"><span class="number">6</span> permission_classes = [AllowAny]</span><br></pre></td></tr></table></figure><h2 id="限流-Throttling"><a href="#限流-Throttling" class="headerlink" title="限流 Throttling:"></a>限流 Throttling:</h2><h3 id="局部限流：views-py"><a href="#局部限流：views-py" class="headerlink" title="局部限流：views.py"></a>局部限流：views.py</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span> <span class="keyword">from</span> rest_framework.throttling <span class="keyword">import</span> AnonRateThrottle</span><br><span class="line"><span class="number">2</span></span><br><span class="line"><span class="number">3</span> <span class="class"><span class="keyword">class</span> <span class="title">BookInfoModelViewSet</span>(<span class="params">ModelViewSet</span>):</span></span><br><span class="line"><span class="number">4</span> ...</span><br><span class="line"><span class="number">5</span> <span class="comment">#局部限流</span></span><br><span class="line"><span class="number">6</span> throttle_classes = [AnonRateThrottle]</span><br></pre></td></tr></table></figure><h2 id="全局限流：settiongs-py"><a href="#全局限流：settiongs-py" class="headerlink" title="全局限流：settiongs.py"></a>全局限流：settiongs.py</h2><h5 id="1-全局限流"><a href="#1-全局限流" class="headerlink" title="1 #全局限流"></a>1 #全局限流</h5><h5 id="2-‘DEFAULT-THROTTLE-CLASSES’"><a href="#2-‘DEFAULT-THROTTLE-CLASSES’" class="headerlink" title="2 ‘DEFAULT_THROTTLE_CLASSES’: ["></a>2 ‘DEFAULT_THROTTLE_CLASSES’: [</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">3</span> <span class="string">&#x27;rest_framework.throttling.AnonRateThrottle&#x27;</span>, <span class="comment">#匿名用户</span></span><br><span class="line"><span class="number">4</span> <span class="string">&#x27;rest_framework.throttling.UserRateThrottle&#x27;</span> <span class="comment">#认证用户</span></span><br><span class="line"><span class="number">5</span> ],</span><br><span class="line"><span class="number">6</span> <span class="string">&#x27;DEFAULT_THROTTLE_RATES&#x27;</span>: &#123;</span><br><span class="line"><span class="number">7</span> <span class="string">&#x27;anon&#x27;</span>: <span class="string">&#x27;2/day&#x27;</span>,</span><br><span class="line"><span class="number">8</span> <span class="string">&#x27;user&#x27;</span>: <span class="string">&#x27;3/day&#x27;</span></span><br><span class="line"><span class="number">9</span> &#125;</span><br></pre></td></tr></table></figure><h2 id="分页-Pagination："><a href="#分页-Pagination：" class="headerlink" title="分页 Pagination："></a>分页 Pagination：</h2><h3 id="局部分页：views-py"><a href="#局部分页：views-py" class="headerlink" title="局部分页：views.py"></a>局部分页：views.py</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span> <span class="keyword">from</span> rest_framework.pagination <span class="keyword">import</span> LimitOffsetPagination,PageNumberPag</span><br><span class="line">ination</span><br><span class="line"><span class="number">2</span></span><br><span class="line"><span class="number">3</span> <span class="class"><span class="keyword">class</span> <span class="title">BookInfoModelViewSet</span>(<span class="params">ModelViewSet</span>):</span></span><br><span class="line"><span class="number">4</span> ...</span><br><span class="line"><span class="number">5</span> <span class="comment">#局部分页</span></span><br><span class="line"><span class="number">6</span> pagination_class = LimitOffsetPagination</span><br><span class="line"><span class="number">7</span></span><br></pre></td></tr></table></figure><h3 id="全局分页settiongs-py"><a href="#全局分页settiongs-py" class="headerlink" title="全局分页settiongs.py"></a>全局分页settiongs.py</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span> <span class="string">&#x27;DEFAULT_PAGINATION_CLASS&#x27;</span>: <span class="string">&#x27;rest_framework.pagination.LimitOffsetPaginat</span></span><br><span class="line"><span class="string">ion&#x27;</span>,</span><br><span class="line"><span class="number">2</span> <span class="string">&#x27;PAGE_SIZE&#x27;</span>:  </span><br></pre></td></tr></table></figure><h3 id="过滤-Filtering"><a href="#过滤-Filtering" class="headerlink" title="过滤 Filtering:"></a>过滤 Filtering:</h3><h4 id="1，安装扩展-django-filters"><a href="#1，安装扩展-django-filters" class="headerlink" title="1，安装扩展 django-filters"></a>1，安装扩展 django-filters</h4><h4 id="2，注册子应用"><a href="#2，注册子应用" class="headerlink" title="2，注册子应用"></a>2，注册子应用</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span> INSTALLED_APPS = [</span><br><span class="line">    ... </span><br><span class="line">    <span class="string">&#x27;django_filters&#x27;</span>,</span><br><span class="line">    ...</span><br><span class="line"><span class="number">5</span> ]</span><br></pre></td></tr></table></figure><h4 id="3，全局配置："><a href="#3，全局配置：" class="headerlink" title="3，全局配置："></a>3，全局配置：</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span> REST_FRAMEWORK = &#123;</span><br><span class="line">    ...</span><br><span class="line">    <span class="string">&#x27;DEFAULT_FILTER_BACKENDS&#x27;</span></span><br><span class="line">    [<span class="string">&#x27;django_filters.rest_framework.DjangoFilterBackend&#x27;</span>]</span><br><span class="line"><span class="number">5</span> &#125;</span><br></pre></td></tr></table></figure><h4 id="局部配置："><a href="#局部配置：" class="headerlink" title="局部配置："></a>局部配置：</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span> filter_backends = [DjangoFilterBackend]</span><br></pre></td></tr></table></figure><h2 id="排序-OrderingFilter"><a href="#排序-OrderingFilter" class="headerlink" title="排序 OrderingFilter"></a>排序 OrderingFilter</h2><h4 id="使用指定的字段进行排序"><a href="#使用指定的字段进行排序" class="headerlink" title="使用指定的字段进行排序"></a>使用指定的字段进行排序</h4><h4 id="类视图：-1"><a href="#类视图：-1" class="headerlink" title="类视图："></a>类视图：</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span> <span class="keyword">from</span> rest_framework <span class="keyword">import</span> filters</span><br><span class="line"><span class="number">2</span> <span class="class"><span class="keyword">class</span> <span class="title">BookInfoModelViewSet</span>(<span class="params">ModelViewSet</span>):</span></span><br><span class="line"><span class="number">3</span> ...</span><br><span class="line"><span class="number">4</span> filter_backends = [filters.OrderingFilter]</span><br><span class="line"><span class="number">5</span> ordering_fields =[<span class="string">&#x27;id&#x27;</span>,<span class="string">&#x27;btitle&#x27;</span>]</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> DRF </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
